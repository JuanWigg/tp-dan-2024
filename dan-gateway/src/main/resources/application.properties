spring.application.name=gateway-service
spring.cloud.gateway.routes[0].id=clientes
spring.cloud.gateway.routes[0].uri=${CLIENTES_SERVICE_URL}
spring.cloud.gateway.routes[0].predicates[0]=Path=/clientes/**
spring.cloud.gateway.routes[0].filters[0]=PrefixPath=/api
spring.cloud.gateway.routes[0].filters[1]=AddResponseHeader=X-Powered-By,DANGateway
spring.cloud.gateway.routes[1].id=productos
spring.cloud.gateway.routes[1].uri=${PRODUCTOS_SERVICE_URL}
spring.cloud.gateway.routes[1].predicates[0]=Path=/productos/**
spring.cloud.gateway.routes[1].filters[0]=PrefixPath=/api
spring.cloud.gateway.routes[1].filters[1]=AddResponseHeader=X-Powered-By,DANGateway
spring.cloud.gateway.routes[2].id=pedidos
spring.cloud.gateway.routes[2].uri=${PEDIDOS_SERVICE_URL}
spring.cloud.gateway.routes[2].predicates[0]=Path=/pedidos/**
spring.cloud.gateway.routes[2].filters[0]=PrefixPath=/api
spring.cloud.gateway.routes[2].filters[1]=AddResponseHeader=X-Powered-By,DANGateway


logging.level.org.springframework.cloud.gateway: TRACE
logging.level.reactor.netty: DEBUG

security.basic.enabled=false
management.security.enabled=false
#actuator
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=
management.metrics.web.server.request.autotime.enabled=true
management.endpoint.prometheus.enabled=true
management.prometheus.metrics.export.enabled=true

# CONFIGURACION NECESARIA PARA EUREKA
spring.application.name=DAN-GATEWAY
eureka.client.serviceUrl.defaultZone=${SPRING_EUREKA_DEFAULT_ZONE}
eureka.client.initialInstanceInfoReplicationIntervalSeconds=5
eureka.client.registryFetchIntervalSeconds: 5
eureka.client.enabled=false
eureka.instance.leaseRenewalIntervalInSeconds: 5
eureka.instance.leaseExpirationDurationInSeconds: 5
# FIN CONFIGURACION NECESARIA PARA EUREKA
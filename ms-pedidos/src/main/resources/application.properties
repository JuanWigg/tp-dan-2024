spring.application.name=ms-pedidos

spring.rabbitmq.host=${SPRING_RABBITMQ_HOST}
spring.rabbitmq.port=${SPRING_RABBITMQ_PORT}
spring.rabbitmq.username=${SPRING_RABBITMQ_USER}
spring.rabbitmq.password=${SPRING_RABBITMQ_PASSWORD}

# spring.data.mongodb.host=${SPRING_DATA_MONGODB_HOST}
# spring.data.mongodb.port=${SPRING_DATA_MONGODB_PORT}
# spring.data.mongodb.database=${SPRING_DATA_MONGODB_DATABASE}  # Use the database name defined in Docker Compose
# spring.data.mongodb.username=${SPRING_DATA_MONGODB_USERNAME}
# spring.data.mongodb.password=${SPRING_DATA_MONGODB_PASSWORD}
spring.data.mongodb.uri=${SPRING_DATA_MONGODB_URL}

management.endpoint.metrics.enabled=true
management.metrics.enable.http.server.requests=true
management.metrics.tags.application=ms-pedidos
management.metrics.tags.environment=prod
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=
management.endpoint.health.show.details=always
management.metrics.web.server.request.autotime.enabled=true
management.endpoint.prometheus.enabled=true
management.prometheus.metrics.export.enabled=true

configuration.productosBaseUrl=${PRODUCTOS_BASE_URL}
configuration.clientesBaseUrl=${CLIENTES_BASE_URL}


spring.zipkin.baseUrl: http://zipkin:9411/
#logging.level.root=debug
management.tracing.enabled=${SPRING_ENABLE_TRACING}
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=${ZIPKIN_ENDPOINT}
#http://zipkin:9411/api/v2/spans
#management.otlp.metrics.export.url=http://zipkin:4318/v1/metrics
management.otlp.metrics.export.resource-attributes.service.name=MS-PEDIDOS